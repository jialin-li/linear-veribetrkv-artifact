// HandleReadResponseImpl.i.dfy
module HandleReadResponseImpl {
  method readSuperblockResp(k: ImplConstants, cm: Committer, io: DiskIOHandler, which: uint64)
    modifies cm.Repr
  {
    var id: D.ReqId, sector: Option<SI.Sector> := IOImpl.ReadSector(io);
    var res: SuperblockReadResult := if sector.Some? && sector.value.SectorSuperblock? then JC.SuperblockSuccess(sector.value.superblock) else JC.SuperblockCorruption;
    if which == 0 {
      if Some(id) == cm.superblock1Read {
        cm.superblock1 := res;
        cm.superblock1Read := None;
      } else {
        print "readSuperblockResp did nothing\n";
      }
    } else {
      if Some(id) == cm.superblock2Read {
        cm.superblock2 := res;
        cm.superblock2Read := None;
      } else {
        print "readSuperblockResp did nothing\n";
      }
    }
  }
  method readResponse(k: ImplConstants, s: Full, io: DiskIOHandler)
    modifies s.Repr
  {
    var id: D.ReqId, addr: uint64, bytes: seq<byte> := io.getReadResult();
    var loc: Location := DiskLayout.Location(addr, |bytes| as uint64);
    if ValidNodeLocation(loc) {
      if s.bc.ready {
        IOImpl.PageInNodeResp(k, s.bc, io);
      } else {
        print "readResponse: doing nothing\n";
      }
    } else if ValidIndirectionTableLocation(loc) {
      if !s.bc.ready && s.bc.loading {
        IOImpl.PageInIndirectionTableResp(k, s.bc, io);
      } else {
        print "readResponse: doing nothing\n";
      }
    } else if ValidJournalLocation(loc) {
      if s.jc.status.StatusLoadingOther? {
        CommitterInitImpl.PageInJournalResp(k, s.jc, io);
      }
    } else if loc == Superblock1Location() {
      readSuperblockResp(k, s.jc, io, 0);
    } else if loc == Superblock2Location() {
      readSuperblockResp(k, s.jc, io, 1);
    } else {
      print "readResponse: doing nothing\n";
    }
  }
}