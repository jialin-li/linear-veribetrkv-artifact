// FullImpl.i.dfy
module FullImpl {
  datatype Full = Full(bc: Variables, jc: Committer) {
    predicate W()
      decreases this
    {
      this.bc.W() &&
      this.jc.WF()
    }
    function I(): BJC.Variables
      requires W()
      decreases this
    {
      BJC.Variables(bc.I(), jc.I())
    }
    predicate WF()
      decreases this
    {
      W() &&
      bc.WFBCVars()
    }
    predicate Inv()
      decreases this
    {
      WF() &&
      bc.Inv() &&
      jc.Inv() &&
      BJC.Inv(I())
    }
    static method Constructor() returns (f: Full)
      ensures f.Inv()
      ensures f.bc.Unready?
      ensures f.jc.I() == JC.LoadingSuperblock(None, None, JC.SuperblockUnfinished, JC.SuperblockUnfinished, map[])
    {
      var bc: Variables := StateBCImpl.Variables.Constructor();
      var cm: Committer := CommitterImpl.Committer.Constructor();
      f := Full(bc, cm);
      assert f.Inv();
    }
  }
}
Dafny program verifier did not attempt verification