// LinearLru.i.dfy
module LinearLru {
  export
  datatype  LinearLru = LinearLru(dlist: DList.DList<uint64>, ptr_map: LinearMutableMap.LinearHashMap<uint64>) {
    static method Alloc() returns (lru: LinearLru)
    {
      var size: uint64 := 128;
      var dlist: DList<uint64> := DList.DList<uint64>.Alloc(size + 1);
      var ptr_map: LinearHashMap<uint64> := LinearMutableMap.Constructor(size);
      lru := LinearLru(dlist, ptr_map);
    }
    method Free()
    {
      var LinearLru(dlist: DList.DList<uint64>, ptr_map: LinearMutableMap.LinearHashMap<uint64>) := this;
      dlist.Free();
      LinearMutableMap.Destructor(ptr_map);
    }
    method Remove(inout old_self: LinearLru, x: uint64) returns (self: LinearLru)
    {
      self := old_self;
      var removed: Option<uint64>, _inout_tmp_1: LinearHashMap<uint64> := LinearMutableMap.RemoveAndGet(inout self.ptr_map, x);
      self := self.(ptr_map := _inout_tmp_1);
      if removed.Some? {
        var Some(p: uint64) := removed;
        var _inout_tmp_0: DList<uint64>;
        _inout_tmp_0 := self.dlist.Remove(inout self.dlist, p);
        self := self.(dlist := _inout_tmp_0);
      }
    }
    method Use(inout old_self: LinearLru, x: uint64) returns (self: LinearLru)
    {
      self := old_self;
      var _inout_tmp_0: LinearLru;
      _inout_tmp_0 := self.Remove(inout self, x);
      self := _inout_tmp_0;
      var p: uint64, _inout_tmp_1: DList<uint64> := self.dlist.InsertBefore(inout self.dlist, 0, x);
      self := self.(dlist := _inout_tmp_1);
      var _inout_tmp_2: LinearHashMap<uint64>;
      _inout_tmp_2 := LinearMutableMap.Insert(inout self.ptr_map, x, p);
      self := self.(ptr_map := _inout_tmp_2);
    }
    method Next() returns (x: uint64)
    {
      var p: uint64 := this.dlist.Next(0);
      x := this.dlist.Get(p);
    }
    method NextOpt() returns (x: Option<uint64>)
    {
      var p: uint64 := this.dlist.Next(0);
      if p == 0 {
        x := None;
      } else {
        x := Some(this.dlist.Get(p));
      }
    }
  }
}
Dafny program verifier did not attempt verification